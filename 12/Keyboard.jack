// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    static int keyboard;
    static Array stringbuffer;

    /** Initializes the keyboard. */
    function void init() {
        let keyboard = 24576;
        let stringbuffer = Array.alloc(200);
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(keyboard);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char key;

        while (1) {
            key = Keyboard.keyPressed();
            if (key) {
                return key;
            }
        }
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String line;
        var char key;
        var int count;
        var boolean flag;

        let count = 0;
        let flag = true;
        while (flag) {
            let key = Keyboard.readChar();
            
            if (((key = 128) | (key = 129)) && count > 0) {
                if (key = 128) {
                    flag = false;
                }

                if (key = 129) {
                    count = count - 1;
                }
            } else {
                stringbuffer[count] = key;
                count = count + 1;
            }

            if (count = 200) {
                flag = false;
            }
        }

        let line = String.new(count);
        while (count) {
            let key = stringbuffer[count];
            let count = count - 1;
            line[count] = key;
        }

        return line;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String line;
        do Output.printString(message);
        line = Keyboard.readLine();
        do Output.printString(line);
        return String.intValue();
    }
}
